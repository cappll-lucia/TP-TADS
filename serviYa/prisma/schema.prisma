generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://serviya:LKJ741zxc@cluster0.ezxkjig.mongodb.net/serviYa?retryWrites=true"
}

model AuthUser {
  id             String            @id @map("_id")
  name           String
  email          String @unique
  role           String
  auth_session   AuthSession[]
  auth_key       AuthKey[]
  profesinalData ProfessionalData?

  @@map("auth_user")
}

model ProfessionalData {
  id          String    @id @map("_id")
  user_id     String    @unique
  user        AuthUser  @relation(references: [id], fields: [user_id], onDelete: Cascade)
  location_id String
  services    Service[]
}

model AuthSession {
  id             String   @id @map("_id")
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @map("_id")
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Service {
  id                 String            @id @map("_id")
  name               String
  ProfessionalData   ProfessionalData? @relation(fields: [professionalDataId], references: [id])
  professionalDataId String?

  @@map("service")
}
